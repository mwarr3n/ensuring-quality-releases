name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: '$(KNOWN_HOST_ENTRY)'
        sshPublicKey: '$(PUBLIC_KEY)'
        sshKeySecureFile: 'id_rsa'
    - task: TerraformInstaller@0
      displayName: 'Terraform Install'
      inputs:
        terraformVersion: '1.0.4'
    - task: TerraformTaskV2@2
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'up3-service-connection'
        backendAzureRmResourceGroupName: 'tfstate'
        backendAzureRmStorageAccountName: 'tfstate30471'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: '$(ACCESS_KEY)'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    - task: TerraformTaskV2@2
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
    - task: TerraformTaskV2@2
      displayName: 'Terraform Destroy'
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'up3-service-connection'
    # - task: TerraformTaskV1@0
    #   displayName: Terraform Plan
    #   inputs:
    #     provider: 'azurerm'
    #     command: 'plan'
    #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    #     environmentServiceNameAzureRM: 'up3-service-connection'
      
      
 



    # - task: ArchiveFiles@2
    #   displayName: 'Archive FakeRestAPI'
    #   inputs:
    #     rootFolderOrFile: '$(System.DefaultWorkingDirectory)/fakerestapi'
    #     includeRootFolder: false
    #     archiveType: 'zip'
    #     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    # - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
    #   displayName: 'Upload Package'
    #   artifact: drop-fakerestapi
# - stage:
#   jobs:
#   - deployment: FakeRestAPI
#     pool:
#       vmImage: 'Ubuntu-16.04'
#     environment: 'TEST'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App'
#             inputs:
#               azureSubscription: ''
#               appName: ''
#               appType: webApp
#               package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


